; Generated by c86 (BYU-NASM) 5.1 (beta) from hw6.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
L_hw6_9:
	DB	"this is default",0xA,0
L_hw6_8:
	DB	"this is 7",0xA,0
L_hw6_7:
	DB	"this is 6",0xA,0
L_hw6_6:
	DB	"this is 5",0xA,0
L_hw6_5:
	DB	"this is 4",0xA,0
L_hw6_4:
	DB	"this is 3",0xA,0
L_hw6_3:
	DB	"this is 2",0xA,0
L_hw6_2:
	DB	"this is 1",0xA,0
L_hw6_1:
	DB	"this is 0",0xA,0
	ALIGN	2
main:
	; >>>>> Line:	3
	; >>>>> int main(){ 
	jmp	L_hw6_10
L_hw6_11:
	; >>>>> Line:	5
	; >>>>> switch(var){ 
	mov	ax, word [bp-2]
	sub	ax, 200
	je	L_hw6_14
	sub	ax, 113
	je	L_hw6_15
	sub	ax, 154
	je	L_hw6_16
	sub	ax, 430
	je	L_hw6_17
	sub	ax, 102
	je	L_hw6_18
	sub	ax, -449
	je	L_hw6_19
	sub	ax, 50
	je	L_hw6_20
	sub	ax, 168
	je	L_hw6_21
	jmp	L_hw6_13
L_hw6_14:
	; >>>>> Line:	7
	; >>>>> printString("this is 0\n"); 
	mov	ax, L_hw6_1
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	8
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_15:
	; >>>>> Line:	10
	; >>>>> printString("this is 1\n"); 
	mov	ax, L_hw6_2
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	11
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_16:
	; >>>>> Line:	13
	; >>>>> printString("this is 2\n"); 
	mov	ax, L_hw6_3
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	14
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_17:
	; >>>>> Line:	16
	; >>>>> printString("this is 3\n");  
	mov	ax, L_hw6_4
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	17
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_18:
	; >>>>> Line:	19
	; >>>>> printString("this is 4\n");  
	mov	ax, L_hw6_5
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	20
	; >>>>>  
	jmp	L_hw6_12
L_hw6_19:
	; >>>>> Line:	22
	; >>>>> printString("this is 5\n");  
	mov	ax, L_hw6_6
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	23
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_20:
	; >>>>> Line:	25
	; >>>>> printString("this is 6\n");  
	mov	ax, L_hw6_7
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	26
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_21:
	; >>>>> Line:	28
	; >>>>> printString("this is 7\n");  
	mov	ax, L_hw6_8
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	29
	; >>>>> break; 
	jmp	L_hw6_12
L_hw6_13:
	; >>>>> Line:	31
	; >>>>> printString("this is default\n");  
	mov	ax, L_hw6_9
	push	ax
	call	printString
	add	sp, 2
L_hw6_12:
	; >>>>> Line:	34
	; >>>>> return 0; 
	xor	ax, ax
L_hw6_22:
	mov	sp, bp
	pop	bp
	ret
L_hw6_10:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_hw6_11
